<?npl 
--[[
Title: property window
Author: LiXizhi, see also: 
    http://www.jeasyui.com/demo/main/index.php?plugin=TreeGrid
    http://www.jeasyui.com/tutorial/tree/treegrid3.php
Date: 2015/6/26
Desc: 
  ajax/propertywindow?action=setproperty&id=-all-WindowText&value=helloworld
  
]]
if(is_ajax()) then
  local function convert_to_row(path, data, nFieldIndex)
    local row = {};
    local sName = data:GetFieldName(nFieldIndex);
		local sType = data:GetFieldType(nFieldIndex);  
    local sSchematics = data:GetSchematicsType(nFieldIndex);
    local value;
    
    if(sSchematics == ":dialog") then
      value = sSchematics;
    elseif(sType == "string") then
      value = data:GetField(sName, "");
    elseif(sType == "void") then
      value = nil;
    elseif(sType == "int" or sType == "DWORD" or sType == "float" or sType == "double" or sType == "bool") then
      value = commonlib.serialize_compact(data:GetField(sName, nil));
    else
      value = commonlib.serialize_compact(data:GetField(sName, {}));
    end
    local row = {state="open", id=(path.."-"..sName), 
      name=sName, type = sType, value=value, 
    }
    return row;
  end

  -- ajax handler
  add_action('wp_ajax_propertywindow', function()
    NPL.load("(gl)script/ide/System/Core/ObjectPath.lua");
    local ObjectPath = commonlib.gettable("System.Core.ObjectPath")
    local path = request:get("id");
    local rows = {};
    if(path) then
      local obj_path = path:gsub("-", "/");
      obj_path = obj_path:gsub("/properties$", "");
      local objpath = ObjectPath:new():init(obj_path);
      local data = objpath:data();
      if(data and data.GetFieldNum) then
        for nFieldIndex = 0, data:GetFieldNum() - 1 do
          local row = convert_to_row(path, data, nFieldIndex);
          if(row) then
            rows[#rows+1] = row;
          end
        end
      end
    end
    if(#rows == 0)then
      rows[#rows+1] = {name="empty", value="please select data", id="0", state="open"}
    end
    wp_send_json(rows);
  end)
  
  local allowed_root_names = {
	  all = true, scene=true, npl=true, asset=true, gui=true
  }

  -- set property
  add_action('wp_ajax_setproperty', function()
    local bSucceed, cmd;
    NPL.load("(gl)script/ide/System/Core/ObjectPath.lua");
    local ObjectPath = commonlib.gettable("System.Core.ObjectPath")
    local path = request:get("id");
    if(path) then
      local obj_path = path:gsub("-", "/");
      local name;
      obj_path, name = obj_path:match("(.*)/([%w%_]+)$");
      local root_name = obj_path:match("^/(%w+)")
			if(allowed_root_names[root_name or ""]) then
        local objpath = ObjectPath:new():init(obj_path);
        local value = request:get("value");
        if(name and value) then
          cmd = format("/property %s %s %s", obj_path:gsub("/","-"), name, value);
          LOG.std(nil, "debug", "wp_ajax_setproperty", cmd);
          bSucceed = objpath:SetFieldStr(name, value);
        end
      end
      wp_send_json({succeed = bSucceed, cmd = cmd});
    end
  end);
  return;
end
wp_enqueue_style("easyui", "/wp-includes/js/jeasyui/themes/default/easyui.css"); 
wp_enqueue_style("easyui_icon", "/wp-includes/js/jeasyui/themes/icon.css"); 
wp_enqueue_script("easyui", "/wp-includes/js/jeasyui/jquery.easyui.min.js"); 
  
local PropertyWindow = {};
function PropertyWindow:DrawNPLInfo()
?>
<table id="dg" class="easyui-datagrid" singleSelect="true" fitColumns="true">
    <thead>
        <tr>
            <th data-options="field:'name'">name</th>
            <th data-options="field:'value'">value</th>
        </tr>
    </thead>
    <tbody>
      <?npl
      echo(format("<tr><td>%s</td><td>%s</td></tr>\n", "NPL Website Version", wp_version));
      echo(format("<tr><td>%s</td><td>%s</td></tr>\n", "site_url", site_url()));
      echo(format("<tr><td>%s</td><td>%s</td></tr>\n", "your ip", request:getpeername()));
      
      for name, value in pairs(request.headers) do
        echo(format("<tr><td>%s</td><td>%s</td></tr>\n", name, sanitize(tostring(value))));
      end
      ?>
    </tbody>
</table>
<?npl
end
?>
<div id="prop_tabs" class="easyui-tabs" style="width:100%;height:auto">
  <div title="About" style="padding:10px">
    <p style="font-size:14px">NPL Code Wiki helps you learn NPL easily.</p>
    <ul>
      <li>NPL(Neural Parallel Language) is an open source collection of libraries based on C++ and Lua. </li>
      <li>NPL provides essential functionality for building 3D/2D/Networking applications.</li>
      <li>NPL is a single language solution for advanced and interactive GUI, complex opengl/DirectX 3D graphics, 
scalable webserver and distributed software frameworks. It is cross-platform, high performance, extensible and debuggable.</li>
      <li>Since 2005, we have used NPL to create 3D MMORPG with millions of users, web site like this one, and most recently: Paracraft. </li>
      <li>With NPL, we are currently exploring new logics in 3d design, AI and education. </li>
    </ul>
	<div align="right">
		<form action="https://github.com/LiXizhi/NPLRuntime/wiki">
			<button type="submit"/><i i class="glyphicon glyphicon-download"></i>Download NPL</button>
		</form>
	</div>
  </div>
  <div title="NPL Info">
    <?npl PropertyWindow:DrawNPLInfo(); ?>
  </div>
  <div title="Properties">
    <div style="margin-left:10px;margin:5px;">
        <a href="javascript:void(0)" class="easyui-linkbutton" onclick="edit()">Edit</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" onclick="save()">Save</a>
        <a href="javascript:void(0)" class="easyui-linkbutton" onclick="cancel()">Cancel</a>
        <div id="property_result" style="font-size:11px;"></div>
    </div>
    <div id="prop_cm" class="easyui-menu" style="width:120px;">
        <div onclick="edit()" data-options="iconCls:'icon-edit'">Edit</div>
        <div onclick="save()" data-options="iconCls:'icon-save'">Save</div>
        <div class="menu-sep"></div>
        <div onclick="refresh()">Refresh</div>
        <div onclick="cancel()">Cancel</div>
    </div>
    <table title="properties" id="prop_tg" class="easyui-treegrid"
        idField="id" treeField="name" remoteSort="false" singleSelect="true"
        data-options="onContextMenu: onContextMenu,onDblClickRow:onDblClickRow"
        >
      <thead>
        <tr>
          <th field="name" sortable="true" width="50%">Name</th>
          <th field="value" width="25%" editor="text">Value</th>
          <th field="type" width="25%">Type</th>
        </tr>
      </thead>
    </table>
  </div>
</div>
<script type="text/javascript">
  function ShowProperty(object_path){
    $("#prop_tabs").tabs('select', "Properties");
    $("#prop_tg").treegrid({url:("ajax/propertywindow?id="+object_path)});
  }
  
  var editingId;
  function edit(){
      if (editingId != undefined){
          $('#prop_tg').treegrid('select', editingId);
          return;
      }
      var t = $('#prop_tg');
      var row = t.treegrid('getSelected');
      if (row){
          editingId = row.id
          t.treegrid('beginEdit', editingId);
      }
      // Enter to save field
      var ed = t.treegrid('getEditor', {index:editingId,field:'value'});
      if(ed){
        $(ed.target).focus().select().bind('keyup', function(e) 
        {
            var code = e.keyCode || e.which;
            if(code == 13) { //Enter keycode
              save();
            }
        });
      }
  }
  function save(){
      if (editingId != undefined){
        var t = $('#prop_tg');
        t.treegrid('endEdit', editingId);
        var row = t.treegrid('find', editingId);
        editingId = undefined;
        
        if(row!=undefined) {
          $.get("ajax/propertywindow", { action: "setproperty", id: row.id, value: row.value}, function(data){
            if(data.succeed){
              if(data.cmd){
                $('#property_result').text(data.cmd);
              }
            }
            else{
              alert("operation now allowed!" + JSON.stringify(data));
              refresh();
            }
          });
        }
      }
  }
  function refresh(){
    var t = $('#prop_tg');
    t.treegrid('reload');
  }
  function cancel(){
      if (editingId != undefined){
          $('#prop_tg').treegrid('cancelEdit', editingId);
          editingId = undefined;
      }
  }
  function onContextMenu(e,row){
      e.preventDefault();
      $(this).treegrid('select', row.id);
      $('#prop_cm').menu('show',{
          left: e.pageX,
          top: e.pageY
      });
  }
  function onDblClickRow(row){
    cancel();
    edit();
  }
</script>  
  
  